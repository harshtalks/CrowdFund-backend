{
  "address": "0xa1EaAdE921EA39B5Db48991771187e7CB0228079",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressArgument",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CrowdFund__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAmountFundedByTheAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbbea9fd547409d768c8483d277b7ca8474003c01f56fcd3764480a159a5a345f",
  "receipt": {
    "to": null,
    "from": "0xBbaa38eC83B040843BEB3FDC67Ba7Aea38C8213E",
    "contractAddress": "0xa1EaAdE921EA39B5Db48991771187e7CB0228079",
    "transactionIndex": 6,
    "gasUsed": "892705",
    "logsBloom": "0x
    "blockHash": "0x03395a5e4ae354820dd1cef81a41b2655e7bbee0efeb0586ba5d941d2f284505",
    "transactionHash": "0xbbea9fd547409d768c8483d277b7ca8474003c01f56fcd3764480a159a5a345f",
    "logs": [],
    "blockNumber": 10983697,
    "cumulativeGasUsed": "8269598",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "a2c96deb25e9ee5d1fe555102a480ee0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressArgument\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CrowdFund__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAmountFundedByTheAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFund.sol\":\"CrowdFund\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/CrowdFund.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Error\\n\\nerror CrowdFund__NotOwner();\\n\\n// Contract\\n\\ncontract CrowdFund {\\n    // type initializer\\n    using PriceConverter for uint256;\\n\\n    // data types\\n    uint256 private constant MIN_AMOUNT = 50;\\n    address private immutable owner;\\n\\n    // storage data types (computationaly expensive)\\n\\n    address[] private funders;\\n    mapping(address => uint256) private balances;\\n\\n    AggregatorV3Interface private priceFeed;\\n\\n    // Modifiers\\n\\n    modifier OnlyOwner() {\\n        if (owner != msg.sender) {\\n            revert CrowdFund__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // Constructor\\n\\n    constructor(address addressArgument) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(addressArgument);\\n    }\\n\\n    // getter functions\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return funders[index];\\n    }\\n\\n    function getAmountFundedByTheAddress(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return balances[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n\\n    // functions\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MIN_AMOUNT,\\n            \\\"You need to spend more funds.\\\"\\n        );\\n        funders.push(msg.sender);\\n        balances[msg.sender] += msg.value;\\n    }\\n\\n    function withDraw() public payable OnlyOwner {\\n        address[] memory fundersCopy = funders;\\n\\n        for (uint256 index = 0; index < fundersCopy.length; index++) {\\n            address funder = fundersCopy[index];\\n            balances[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        // verification\\n\\n        (bool callSuccess, ) = owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xf261b294cc44a7b22e530fd4f9d726d9235306d0a94a27f79c35363ca3a03af3\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// importing libraries\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Library\\n\\nlibrary PriceConverter {\\n    //functions\\n\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(uint256 amount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 price = getPrice(priceFeed);\\n        uint256 ethAmoutInUSD = (price * amount) / 1000000000000000000;\\n        return ethAmoutInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0xed1d722015ff2f6fa262dde5a1d4ea693e19afc60ae435f96fb40810c5a3d972\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051620010343803806200103483398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610ec56200016f600039600081816101a00152818161037f015261044f0152610ec56000f3fe6080604052600436106100555760003560e01c806308cfd51e1461005a5780630fdb1c1014610097578063893d20e8146100a15780639e87a5cd146100cc578063b60d4288146100f7578063d7b4750c14610101575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c91906107fd565b61013e565b60405161008e9190610843565b60405180910390f35b61009f610187565b005b3480156100ad57600080fd5b506100b661044b565b6040516100c3919061086d565b60405180910390f35b3480156100d857600080fd5b506100e1610473565b6040516100ee91906108e7565b60405180910390f35b6100ff61049d565b005b34801561010d57600080fd5b506101286004803603810190610123919061092e565b6105d0565b604051610135919061086d565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff161461020c576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561028f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610245575b5050505050905060005b815181101561031a5760008282815181106102b7576102b661095b565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610312906109b9565b915050610299565b50600067ffffffffffffffff81111561033657610335610a02565b5b6040519080825280602002602001820160405280156103645781602001602082028036833780820191505090505b506000908051906020019061037a9291906106f3565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103c190610a62565b60006040518083038185875af1925050503d80600081146103fe576040519150601f19603f3d011682016040523d82523d6000602084013e610403565b606091505b5050905080610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043e90610ad4565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60326104d4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061790919063ffffffff16565b1015610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610b40565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105c79190610b60565b92505081905550565b60008082815481106105e5576105e461095b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061062383610653565b90506000670de0b6b3a7640000858361063c9190610bb6565b6106469190610c3f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069c57600080fd5b505afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190610cfd565b5050509150506402540be400816106eb9190610d78565b915050919050565b82805482825590600052602060002090810192821561076c579160200282015b8281111561076b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610713565b5b509050610779919061077d565b5090565b5b8082111561079657600081600090555060010161077e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ca8261079f565b9050919050565b6107da816107bf565b81146107e557600080fd5b50565b6000813590506107f7816107d1565b92915050565b6000602082840312156108135761081261079a565b5b6000610821848285016107e8565b91505092915050565b6000819050919050565b61083d8161082a565b82525050565b60006020820190506108586000830184610834565b92915050565b610867816107bf565b82525050565b6000602082019050610882600083018461085e565b92915050565b6000819050919050565b60006108ad6108a86108a38461079f565b610888565b61079f565b9050919050565b60006108bf82610892565b9050919050565b60006108d1826108b4565b9050919050565b6108e1816108c6565b82525050565b60006020820190506108fc60008301846108d8565b92915050565b61090b8161082a565b811461091657600080fd5b50565b60008135905061092881610902565b92915050565b6000602082840312156109445761094361079a565b5b600061095284828501610919565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c48261082a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109f7576109f661098a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a4c600083610a31565b9150610a5782610a3c565b600082019050919050565b6000610a6d82610a3f565b9150819050919050565b600082825260208201905092915050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610abe600b83610a77565b9150610ac982610a88565b602082019050919050565b60006020820190508181036000830152610aed81610ab1565b9050919050565b7f596f75206e65656420746f207370656e64206d6f72652066756e64732e000000600082015250565b6000610b2a601d83610a77565b9150610b3582610af4565b602082019050919050565b60006020820190508181036000830152610b5981610b1d565b9050919050565b6000610b6b8261082a565b9150610b768361082a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bab57610baa61098a565b5b828201905092915050565b6000610bc18261082a565b9150610bcc8361082a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0557610c0461098a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4a8261082a565b9150610c558361082a565b925082610c6557610c64610c10565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8f81610c70565b8114610c9a57600080fd5b50565b600081519050610cac81610c86565b92915050565b6000819050919050565b610cc581610cb2565b8114610cd057600080fd5b50565b600081519050610ce281610cbc565b92915050565b600081519050610cf781610902565b92915050565b600080600080600060a08688031215610d1957610d1861079a565b5b6000610d2788828901610c9d565b9550506020610d3888828901610cd3565b9450506040610d4988828901610ce8565b9350506060610d5a88828901610ce8565b9250506080610d6b88828901610c9d565b9150509295509295909350565b6000610d8382610cb2565b9150610d8e83610cb2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dcd57610dcc61098a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0a57610e0961098a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4757610e4661098a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e8457610e8361098a565b5b82820290509291505056fea264697066735822122065b98ea5ebaac190c7c6fa6aad70dd622526e85ca28b0af45e0eb9a40ceb516164736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c806308cfd51e1461005a5780630fdb1c1014610097578063893d20e8146100a15780639e87a5cd146100cc578063b60d4288146100f7578063d7b4750c14610101575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c91906107fd565b61013e565b60405161008e9190610843565b60405180910390f35b61009f610187565b005b3480156100ad57600080fd5b506100b661044b565b6040516100c3919061086d565b60405180910390f35b3480156100d857600080fd5b506100e1610473565b6040516100ee91906108e7565b60405180910390f35b6100ff61049d565b005b34801561010d57600080fd5b506101286004803603810190610123919061092e565b6105d0565b604051610135919061086d565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff161461020c576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561028f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610245575b5050505050905060005b815181101561031a5760008282815181106102b7576102b661095b565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610312906109b9565b915050610299565b50600067ffffffffffffffff81111561033657610335610a02565b5b6040519080825280602002602001820160405280156103645781602001602082028036833780820191505090505b506000908051906020019061037a9291906106f3565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103c190610a62565b60006040518083038185875af1925050503d80600081146103fe576040519150601f19603f3d011682016040523d82523d6000602084013e610403565b606091505b5050905080610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043e90610ad4565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60326104d4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061790919063ffffffff16565b1015610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610b40565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105c79190610b60565b92505081905550565b60008082815481106105e5576105e461095b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061062383610653565b90506000670de0b6b3a7640000858361063c9190610bb6565b6106469190610c3f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069c57600080fd5b505afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190610cfd565b5050509150506402540be400816106eb9190610d78565b915050919050565b82805482825590600052602060002090810192821561076c579160200282015b8281111561076b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610713565b5b509050610779919061077d565b5090565b5b8082111561079657600081600090555060010161077e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ca8261079f565b9050919050565b6107da816107bf565b81146107e557600080fd5b50565b6000813590506107f7816107d1565b92915050565b6000602082840312156108135761081261079a565b5b6000610821848285016107e8565b91505092915050565b6000819050919050565b61083d8161082a565b82525050565b60006020820190506108586000830184610834565b92915050565b610867816107bf565b82525050565b6000602082019050610882600083018461085e565b92915050565b6000819050919050565b60006108ad6108a86108a38461079f565b610888565b61079f565b9050919050565b60006108bf82610892565b9050919050565b60006108d1826108b4565b9050919050565b6108e1816108c6565b82525050565b60006020820190506108fc60008301846108d8565b92915050565b61090b8161082a565b811461091657600080fd5b50565b60008135905061092881610902565b92915050565b6000602082840312156109445761094361079a565b5b600061095284828501610919565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c48261082a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109f7576109f661098a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a4c600083610a31565b9150610a5782610a3c565b600082019050919050565b6000610a6d82610a3f565b9150819050919050565b600082825260208201905092915050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610abe600b83610a77565b9150610ac982610a88565b602082019050919050565b60006020820190508181036000830152610aed81610ab1565b9050919050565b7f596f75206e65656420746f207370656e64206d6f72652066756e64732e000000600082015250565b6000610b2a601d83610a77565b9150610b3582610af4565b602082019050919050565b60006020820190508181036000830152610b5981610b1d565b9050919050565b6000610b6b8261082a565b9150610b768361082a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bab57610baa61098a565b5b828201905092915050565b6000610bc18261082a565b9150610bcc8361082a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0557610c0461098a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4a8261082a565b9150610c558361082a565b925082610c6557610c64610c10565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8f81610c70565b8114610c9a57600080fd5b50565b600081519050610cac81610c86565b92915050565b6000819050919050565b610cc581610cb2565b8114610cd057600080fd5b50565b600081519050610ce281610cbc565b92915050565b600081519050610cf781610902565b92915050565b600080600080600060a08688031215610d1957610d1861079a565b5b6000610d2788828901610c9d565b9550506020610d3888828901610cd3565b9450506040610d4988828901610ce8565b9350506060610d5a88828901610ce8565b9250506080610d6b88828901610c9d565b9150509295509295909350565b6000610d8382610cb2565b9150610d8e83610cb2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dcd57610dcc61098a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0a57610e0961098a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4757610e4661098a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e8457610e8361098a565b5b82820290509291505056fea264697066735822122065b98ea5ebaac190c7c6fa6aad70dd622526e85ca28b0af45e0eb9a40ceb516164736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 69,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}