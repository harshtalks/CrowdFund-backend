/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CrowdFund, CrowdFundInterface } from "../../contracts/CrowdFund";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addressArgument",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CrowdFund__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getAmountFundedByTheAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getFunder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withDraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051620010343803806200103483398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610ec56200016f600039600081816101a00152818161037f015261044f0152610ec56000f3fe6080604052600436106100555760003560e01c806308cfd51e1461005a5780630fdb1c1014610097578063893d20e8146100a15780639e87a5cd146100cc578063b60d4288146100f7578063d7b4750c14610101575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c91906107fd565b61013e565b60405161008e9190610843565b60405180910390f35b61009f610187565b005b3480156100ad57600080fd5b506100b661044b565b6040516100c3919061086d565b60405180910390f35b3480156100d857600080fd5b506100e1610473565b6040516100ee91906108e7565b60405180910390f35b6100ff61049d565b005b34801561010d57600080fd5b506101286004803603810190610123919061092e565b6105d0565b604051610135919061086d565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff161461020c576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561028f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610245575b5050505050905060005b815181101561031a5760008282815181106102b7576102b661095b565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610312906109b9565b915050610299565b50600067ffffffffffffffff81111561033657610335610a02565b5b6040519080825280602002602001820160405280156103645781602001602082028036833780820191505090505b506000908051906020019061037a9291906106f3565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103c190610a62565b60006040518083038185875af1925050503d80600081146103fe576040519150601f19603f3d011682016040523d82523d6000602084013e610403565b606091505b5050905080610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043e90610ad4565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60326104d4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061790919063ffffffff16565b1015610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610b40565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105c79190610b60565b92505081905550565b60008082815481106105e5576105e461095b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061062383610653565b90506000670de0b6b3a7640000858361063c9190610bb6565b6106469190610c3f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069c57600080fd5b505afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190610cfd565b5050509150506402540be400816106eb9190610d78565b915050919050565b82805482825590600052602060002090810192821561076c579160200282015b8281111561076b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610713565b5b509050610779919061077d565b5090565b5b8082111561079657600081600090555060010161077e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ca8261079f565b9050919050565b6107da816107bf565b81146107e557600080fd5b50565b6000813590506107f7816107d1565b92915050565b6000602082840312156108135761081261079a565b5b6000610821848285016107e8565b91505092915050565b6000819050919050565b61083d8161082a565b82525050565b60006020820190506108586000830184610834565b92915050565b610867816107bf565b82525050565b6000602082019050610882600083018461085e565b92915050565b6000819050919050565b60006108ad6108a86108a38461079f565b610888565b61079f565b9050919050565b60006108bf82610892565b9050919050565b60006108d1826108b4565b9050919050565b6108e1816108c6565b82525050565b60006020820190506108fc60008301846108d8565b92915050565b61090b8161082a565b811461091657600080fd5b50565b60008135905061092881610902565b92915050565b6000602082840312156109445761094361079a565b5b600061095284828501610919565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c48261082a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109f7576109f661098a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a4c600083610a31565b9150610a5782610a3c565b600082019050919050565b6000610a6d82610a3f565b9150819050919050565b600082825260208201905092915050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610abe600b83610a77565b9150610ac982610a88565b602082019050919050565b60006020820190508181036000830152610aed81610ab1565b9050919050565b7f596f75206e65656420746f207370656e64206d6f72652066756e64732e000000600082015250565b6000610b2a601d83610a77565b9150610b3582610af4565b602082019050919050565b60006020820190508181036000830152610b5981610b1d565b9050919050565b6000610b6b8261082a565b9150610b768361082a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bab57610baa61098a565b5b828201905092915050565b6000610bc18261082a565b9150610bcc8361082a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0557610c0461098a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4a8261082a565b9150610c558361082a565b925082610c6557610c64610c10565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8f81610c70565b8114610c9a57600080fd5b50565b600081519050610cac81610c86565b92915050565b6000819050919050565b610cc581610cb2565b8114610cd057600080fd5b50565b600081519050610ce281610cbc565b92915050565b600081519050610cf781610902565b92915050565b600080600080600060a08688031215610d1957610d1861079a565b5b6000610d2788828901610c9d565b9550506020610d3888828901610cd3565b9450506040610d4988828901610ce8565b9350506060610d5a88828901610ce8565b9250506080610d6b88828901610c9d565b9150509295509295909350565b6000610d8382610cb2565b9150610d8e83610cb2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dcd57610dcc61098a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0a57610e0961098a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4757610e4661098a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e8457610e8361098a565b5b82820290509291505056fea264697066735822122065b98ea5ebaac190c7c6fa6aad70dd622526e85ca28b0af45e0eb9a40ceb516164736f6c63430008080033";

type CrowdFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrowdFund__factory extends ContractFactory {
  constructor(...args: CrowdFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    addressArgument: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrowdFund> {
    return super.deploy(addressArgument, overrides || {}) as Promise<CrowdFund>;
  }
  override getDeployTransaction(
    addressArgument: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(addressArgument, overrides || {});
  }
  override attach(address: string): CrowdFund {
    return super.attach(address) as CrowdFund;
  }
  override connect(signer: Signer): CrowdFund__factory {
    return super.connect(signer) as CrowdFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdFundInterface {
    return new utils.Interface(_abi) as CrowdFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdFund {
    return new Contract(address, _abi, signerOrProvider) as CrowdFund;
  }
}
